# -*- coding: utf-8 -*-
"""Deployment of CNN app using Stremlit

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V9N0ejm1wg8pMIoRx0h32GgIMjuJfDpU
"""

from google.colab import drive
drive.mount('/content/drive')

import matplotlib.pyplot as plt
import numpy as np
import os
import PIL
import tensorflow as tf

from tensorflow import keras
from tensorflow.keras import layers
from tensorflow.keras.models import Sequential

!pip install streamlit

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# import tensorflow as tf
# from skimage import transform
# 
# 
# @st.cache(allow_output_mutation=True)
# def load_model():
#   model=tf.keras.models.load_model('/content/drive/MyDrive/Dataset/model.h5')
#   return model
# with st.spinner('Model is being loaded..'):
#   model=load_model()
# 
# st.write("""
#          # Malaria Detection Using CNN
#          """
#          )
# 
# file = st.file_uploader("Please upload an brain scan file", type=["jpg", "png"])
# import cv2
# from PIL import Image, ImageOps
# import numpy as np
# st.set_option('deprecation.showfileUploaderEncoding', False)
# def import_and_predict(image_data, model):
#     
#         size = (224,224)    
#         image = ImageOps.fit(image_data, size, Image.ANTIALIAS)
#         image = np.asarray(image)
#         np_image = transform.resize(image, (224, 224, 3))
#         np_image = np.expand_dims(np_image, axis=0)
#         img = np_image
# 
#         prediction = model.predict(np_image)
#         
#         return prediction
# if file is None:
#     st.text("Please upload an image file")
# else:
#     image = Image.open(file)
#     st.image(image, use_column_width=True)
#     predictions = import_and_predict(image, model)
#     class_names = ['Infected', 'Healthy']
#     string = "This Person is : "+class_names[np.argmax(predictions)]
#     st.success(string)
# 
#

"""## The following Section has been Covered in my Youtube Video. Since some people reported some issues with, i have added an alternative deployment code at the end. Try that if this does not **work**"""

!pip install pyngrok

!ngrok authtoken 2IJh9izq9Syi9BJQFaYskAcjaio_3BKdxT1RT21C6fs2QLj94

!nohup streamlit run app.py &

from pyngrok import ngrok
url=ngrok.connect(port=8501)
url

!cat /content/nohup.out

"""# **ALTERNATIVE DEPLOYMENT CODE**"""

!wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip

!unzip ngrok-stable-linux-amd64.zip

get_ipython().system_raw('./ngrok http 8501 &')

!curl -s http://localhost:4040/api/tunnels | python3 -c \
    'import sys, json; print("Execute the next cell and the go to the following URL: " +json.load(sys.stdin)["tunnels"][0]["public_url"])'

"""**Run the Streamlit command below and go the URL provided above.
Subscribe to my channel if it works :))**
"""

!streamlit run /content/app.py

